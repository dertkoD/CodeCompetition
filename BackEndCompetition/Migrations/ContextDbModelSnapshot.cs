// <auto-generated />
using System;
using CompetitionLibrary.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackEndCompetition.Migrations
{
    [DbContext(typeof(DbCompetContext))]
    partial class ContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompetitionLibrary.Models.Competition", b =>
                {
                    b.Property<int>("CompetitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionId"));

                    b.Property<DateTime>("CompetitionCreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompetitionDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompetitionEndTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompetitionMaxCountOfCompetitionMembers")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionMaxCountOfTeamMembers")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionMinCountOfCompetitionMembers")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionMinCountOfTeamMembers")
                        .HasColumnType("int");

                    b.Property<string>("CompetitionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CompetitionStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompetitionStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("NumberOfUsers")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionId");

                    b.ToTable("Competitions");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionStatus", b =>
                {
                    b.Property<int>("CompetitionStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionStatusId"));

                    b.Property<string>("CompetitionStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetitionStatusId");

                    b.ToTable("CompetitionStatuses");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionTaskCompet", b =>
                {
                    b.Property<int>("CompetitionTaskCompetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionTaskCompetId"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionTaskPoint")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionTaskPointReceived")
                        .HasColumnType("int");

                    b.Property<TimeSpan?>("CompetitionTaskSolutionTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("CompetitionTaskTimeCompleted")
                        .HasColumnType("time");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionTaskCompetId");

                    b.ToTable("CompetitionTasksCompet");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionTeam", b =>
                {
                    b.Property<int>("CompetitionTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionTeamId"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<string>("CompetitionTeamAvatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompetitionTeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompetitionTeamPoint")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<bool>("TeamTwitterPoint")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionTeamId");

                    b.ToTable("CompetitionTeams");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionTeamTask", b =>
                {
                    b.Property<int>("CompetitionTeamTaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionTeamTaskId"));

                    b.Property<int>("CompetitionTaskId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitionTeamId")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionTeamTaskCheckingUserId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompetitionTeamTaskEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CompetitionTeamTaskStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CompetitionTeamTaskStatusId")
                        .HasColumnType("int");

                    b.Property<string>("CompetitionTeamTaskUrlGitHub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionTeamTaskId");

                    b.ToTable("CompetitionTeamTasks");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionTeamTaskStatus", b =>
                {
                    b.Property<int>("CompetitionTeamTaskStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionTeamTaskStatusId"));

                    b.Property<string>("CompetitionTeamTaskStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompetitionTeamTaskStatusId");

                    b.ToTable("CompetitionTeamTaskStatuses");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionUser", b =>
                {
                    b.Property<int>("CompetitionUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompetitionUserId"));

                    b.Property<int>("CompetitionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompetitionTeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CompetitionUserId");

                    b.ToTable("CompetitionUsers");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.CompetitionUserCompetTeamTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompetitionTeamTaskId")
                        .HasColumnType("int");

                    b.Property<int>("CompetitionUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CompetitionUserCompetTeamTasks");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.StatusObj", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ObjStatusName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StatusObj");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.TaskCompetition", b =>
                {
                    b.Property<int>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskId"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int?>("MainTaskId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TaskDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaskName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPoint")
                        .HasColumnType("int");

                    b.Property<int?>("TaskPointReceived")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("TaskSolutionTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("TaskTimeCompleted")
                        .HasColumnType("time");

                    b.Property<int>("TaskTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("TaskId");

                    b.ToTable("TasksCompetitions");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.TaskType", b =>
                {
                    b.Property<int>("TaskTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskTypeId"));

                    b.Property<string>("TaskTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskTypeId");

                    b.ToTable("TaskTypes");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.Team", b =>
                {
                    b.Property<int>("TeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamId"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<string>("TeamAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.HasKey("TeamId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("CompetitionLibrary.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("int");

                    b.Property<int>("ObjStatusId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("int");

                    b.Property<string>("UserAuth0Id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAvatar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UserBirthday")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UserBirthdayVisibility")
                        .HasColumnType("bit");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserGitHub")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSecondName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
